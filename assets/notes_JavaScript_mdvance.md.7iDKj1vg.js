import{_ as a,c as e,o as r,a9 as t}from"./chunks/framework.Dm2Aprm-.js";const u=JSON.parse('{"title":"JavaScript 进阶知识点总结","description":"","frontmatter":{"layout":"doc"},"headers":[],"relativePath":"notes/JavaScript/mdvance.md","filePath":"notes/JavaScript/mdvance.md","lastUpdated":1737567655000}'),o={name:"notes/JavaScript/mdvance.md"},i=t('<h1 id="javascript-进阶知识点总结" tabindex="-1">JavaScript 进阶知识点总结 <a class="header-anchor" href="#javascript-进阶知识点总结" aria-label="Permalink to &quot;JavaScript 进阶知识点总结&quot;">​</a></h1><h2 id="原型与原型链" tabindex="-1">原型与原型链 <a class="header-anchor" href="#原型与原型链" aria-label="Permalink to &quot;原型与原型链&quot;">​</a></h2><h3 id="原型对象" tabindex="-1">原型对象 <a class="header-anchor" href="#原型对象" aria-label="Permalink to &quot;原型对象&quot;">​</a></h3><p>在 JavaScript 中,每个函数都有一个 prototype 属性,这个属性指向函数的原型对象。</p><h3 id="原型链" tabindex="-1">原型链 <a class="header-anchor" href="#原型链" aria-label="Permalink to &quot;原型链&quot;">​</a></h3><p>当访问一个对象的属性时,如果这个对象内部不存在这个属性,那么就会去它的原型对象里找...</p><h2 id="闭包" tabindex="-1">闭包 <a class="header-anchor" href="#闭包" aria-label="Permalink to &quot;闭包&quot;">​</a></h2><h3 id="什么是闭包" tabindex="-1">什么是闭包 <a class="header-anchor" href="#什么是闭包" aria-label="Permalink to &quot;什么是闭包&quot;">​</a></h3><p>闭包是指有权访问另一个函数作用域中变量的函数...</p><h2 id="promise" tabindex="-1">Promise <a class="header-anchor" href="#promise" aria-label="Permalink to &quot;Promise&quot;">​</a></h2><h3 id="promise-基础" tabindex="-1">Promise 基础 <a class="header-anchor" href="#promise-基础" aria-label="Permalink to &quot;Promise 基础&quot;">​</a></h3><p>Promise 是异步编程的一种解决方案,比传统的回调函数更加优雅...</p><h2 id="参考资料" tabindex="-1">参考资料 <a class="header-anchor" href="#参考资料" aria-label="Permalink to &quot;参考资料&quot;">​</a></h2><ul><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Inheritance_and_the_prototype_chain" target="_blank" rel="noreferrer">MDN - 继承与原型链</a></li><li><a href="https://es6.ruanyifeng.com/#docs/promise" target="_blank" rel="noreferrer">阮一峰 - ECMAScript 6 入门</a></li></ul>',14),n=[i];function l(s,h,c,d,p,m){return r(),e("div",null,n)}const f=a(o,[["render",l]]);export{u as __pageData,f as default};
